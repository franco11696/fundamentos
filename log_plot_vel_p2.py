import matplotlib.pyplot as plt
from matplotlib.gridspec import GridSpec
f = open ('log10_4.txt','r')
log_matrix=f.read().split('\n')
x=list()
y=list()
t=list()
yaw=list()
v_lineal=list()
v_ang=list()

for log_vector in log_matrix:
	log_lines=log_vector.split('\t')
	try:
		t.append(float(log_lines[0]))
		x.append(float(log_lines[1]))
		y.append(float(log_lines[2]))
		v_lineal.append(float(log_lines[4]))
		v_ang.append(float(log_lines[5]))
		yaw.append(float(log_lines[3]))
	except:
		pass
fig = plt.figure(figsize=(10, 5))
gs = GridSpec(nrows=3, ncols=2)
ax0 = fig.add_subplot(gs[:, 0],aspect='equal')
ax0.plot(x, y)
ax0.plot(x[int(len(log_matrix)/3)],y[int(len(log_matrix)/3)], marker='X', color="Black")
plt.text(x[int(len(log_matrix)/3)],y[int(len(log_matrix)/3)],'1', fontsize=10)
ax0.plot(x[int(len(log_matrix)*2/3)],y[int(len(log_matrix)*2/3)], marker='X', color="Black")
plt.text(x[int(len(log_matrix)*2/3)],y[int(len(log_matrix)*2/3)],'2', fontsize=10)
ax0.plot(x[int(len(log_matrix)-2)],y[int(len(log_matrix))-2], marker='X', color="Black")
plt.text(x[int(len(log_matrix)-2)],y[int(len(log_matrix))-2],'3', fontsize=10)
ax0.title.set_text('Camino')
ax1 = fig.add_subplot(gs[0, 1])
ax1.plot(t, x)
ax1.plot(t[int(len(log_matrix)/3)],x[int(len(log_matrix)/3)], marker='X', color="Black")
plt.text(t[int(len(log_matrix)/3)],x[int(len(log_matrix)/3)],'1', fontsize=10)
ax1.plot(t[int(len(log_matrix)*2/3)],x[int(len(log_matrix)*2/3)], marker='X', color="Black")
plt.text(t[int(len(log_matrix)*2/3)],x[int(len(log_matrix)*2/3)],'2',fontsize=10)
ax1.plot(t[int(len(log_matrix)-2)],x[int(len(log_matrix))-2], marker='X', color="Black")
plt.text(t[int(len(log_matrix)-2)],x[int(len(log_matrix)-2)],'3', fontsize=10)
ax1.title.set_text('trayectoria lineal en x')

ax2 = fig.add_subplot(gs[1, 1])
ax2.plot(t, y)
ax2.plot(t[int(len(log_matrix)/3)],y[int(len(log_matrix)/3)], marker='X', color="Black")
plt.text(t[int(len(log_matrix)/3)],y[int(len(log_matrix)/3)],'1', fontsize=10)
ax2.plot(t[int(len(log_matrix)*2/3)],y[int(len(log_matrix)*2/3)], marker='X', color="Black")
plt.text(t[int(len(log_matrix)*2/3)],y[int(len(log_matrix)*2/3)],'2', fontsize=10)
ax2.plot(t[int(len(log_matrix)-2)],y[int(len(log_matrix))-2], marker='X', color="Black")
plt.text(t[int(len(log_matrix)-2)],y[int(len(log_matrix)-2)],'3', fontsize=10)

ax2.title.set_text('Trayectoria lineal en y')
ax3 = fig.add_subplot(gs[2, 1])
ax3.plot(t, yaw)
ax3.plot(t[int(len(log_matrix)/3)],yaw[int(len(log_matrix)/3)], marker='X', color="Black")
plt.text(t[int(len(log_matrix)/3)],yaw[int(len(log_matrix)/3)],'1', fontsize=10)
ax3.plot(t[int(len(log_matrix)*2/3)],yaw[int(len(log_matrix)*2/3)], marker='X', color="Black")
plt.text(t[int(len(log_matrix)*2/3)],yaw[int(len(log_matrix)*2/3)],'2', fontsize=10)
ax3.plot(t[int(len(log_matrix)-2)],yaw[int(len(log_matrix))-2], marker='X', color="Black")
plt.text(t[int(len(log_matrix)-2)],yaw[int(len(log_matrix))-2],'3', fontsize=10)
ax3.title.set_text('Orientaci√≥n')
plt.show()

